plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.13'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.playdata'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Selenium Java 최신 안정판(4.21.0는 최신 중 하나)
    implementation 'org.seleniumhq.selenium:selenium-java:4.21.0'

    // WebDriverManager 최신 안정판(5.7.0 권장, 취약점 경고 있지만 안정적)
    implementation 'io.github.bonigarcia:webdrivermanager:5.7.0'

    // Commons Codec 최신 버전 (1.16.0 최신 안정판)
    implementation 'commons-codec:commons-codec:1.16.0'

    // Lombok (최신 안정판)
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'com.mysql:mysql-connector-j' // MySQL 사용 시

    // 병렬 처리에 쓰일 TaskExecutor 자동 설정을 원한다면
    implementation 'org.springframework.boot:spring-boot-starter-task'

}

tasks.named('test') {
    useJUnitPlatform()
}
